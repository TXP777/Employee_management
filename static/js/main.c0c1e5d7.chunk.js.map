{"version":3,"sources":["api/index.js","context/authContext.js","assets/images/logo.jpg","pages/login/login.js","components/left-nav/index.js","components/header/index.js","pages/home/home.js","pages/attendance/attendance-form.js","components/link-button/index.js","pages/attendance/attendance.js","pages/employee/employee-form.js","pages/employee/employee.js","pages/system/user-form.js","pages/system/system.js","pages/admin/admin.js","index.js"],"names":["reqLogin","username","password","fetch","headers","method","body","JSON","stringify","then","res","json","AuthContext","createContext","AuthContextProvider","props","existingToken","localStorage","getItem","useState","isAuthenticated","setIsAuthenticated","authToken","setAuthToken","userName","setUserName","authenticate","a","result","token","data","setItem","message","error","Provider","value","children","LoginPage","context","useContext","setPassword","onFinish","from","location","state","pathname","to","className","src","logo","alt","name","initialValues","remember","Item","rules","required","min","max","pattern","prefix","UserOutlined","onChange","e","target","placeholder","LockOutlined","type","valuePropName","noStyle","htmlType","onCilck","SubMenu","LeftNav","mode","theme","icon","MailOutlined","title","Component","Header","href","Home","AttendanceForm","onValuesChange","values","setState","addAttendance","attendance","this","labelCol","span","wrapperCol","label","initialValue","attendance_id","employee_id","employee_name","department_id","workingtime","offworktime","numberoflateandleaveearly","PureComponent","LinkButton","Attendance","initColumns","columns","dataIndex","key","getColumnSearchProps","render","onClick","deleteAttendance","getAttendance","attendances","addAttendances","att","current","success","showStatus","confirm","onOk","showUpdate","filterDropdown","setSelectedKeys","selectedKeys","clearFilters","style","padding","ref","node","searchInput","onPressEnter","handleSearch","width","marginBottom","display","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","text","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","handleCancel","React","createRef","bordered","rowKey","dataSource","pagination","defaultPageSize","onCancel","destroyOnClose","EmployeeForm","addOrUpdateEmployee","employee","employee_gender","employee_phone","employee_address","Employee","deleteEmployee","getEmployees","employees","addOrUpdateEmployees","em","UserForm","addOrUpdateUser","user","System","deleteUser","onRow","event","getUsers","console","log","users","user_id","addOrUpdateUsers","us","createtime","Date","now","reqAddOrUpdateUser","disabled","pageSize","rowSelection","selectedRowKeys","onSelect","updateUsers","Footer","Sider","Content","Admin","height","margin","path","component","App","Login","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c0c1e5d7.chunk.js","sourcesContent":["export const reqLogin = (username,password) =>{\r\n return fetch(`users/login`,{\r\n     headers:{\r\n         'Content-Type': 'application/json'\r\n     },\r\n     method:'post',\r\n     body:JSON.stringify({username:username,password:password})\r\n }).then(res => res.json())\r\n}\r\nexport const reqGetEmployees = () =>{\r\n    return fetch(`employee`,{\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'get',\r\n    }).then(res => res.json())\r\n}\r\nexport const reqGetUsers = () =>{\r\n    return fetch(`users`,{\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'get',\r\n    }).then(res => res.json())\r\n}\r\nexport const reqGetAttendance = () =>{\r\n    return fetch(`attendance`,{\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'get',\r\n    }).then(res => res.json())\r\n}\r\nexport const reqDeleteEmployee = (employee_id) =>{\r\n    return fetch(`employee/${employee_id}/delete`,{\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'delete',\r\n        body:JSON.stringify({employee_id:employee_id})\r\n    }).then(res => res.json())\r\n}\r\nexport const reqDeleteUser = (user_id) =>{\r\n    return fetch(`users/${user_id}/delete`,{\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'delete',\r\n        body:JSON.stringify({user_id:user_id})\r\n    }).then(res => res.json())\r\n}\r\nexport const reqDeleteAttendance = (attendance_id) =>{\r\n    return fetch(`attendance/${attendance_id}/delete`,{\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'delete',\r\n        body:JSON.stringify({attendance_id:attendance_id})\r\n    }).then(res => res.json())\r\n}\r\n\r\n\r\nexport const reqAddOrUpdateEmployee = (employee_id,employee_name,employee_gender,employee_phone,employee_address\r\n    ) =>{\r\n    return fetch(`employee/addEmployee`,{\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'post',\r\n        body:JSON.stringify({employee_id:employee_id,employee_name:employee_name,\r\n            employee_gender:employee_gender,employee_phone:employee_phone,employee_address:employee_address})\r\n    }).then(res => res.json())\r\n}\r\nexport const reqAddOrUpdateUser = (user_id,employee_id,username,password\r\n    ) =>{\r\n    return fetch(`users/register`,{\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'post',\r\n        body:JSON.stringify({user_id:user_id,employee_id:employee_id,username:username,password:password})\r\n    }).then(res => res.json())\r\n}\r\n\r\n\r\n// export const reqUpdateUser = (user_id) =>{\r\n//     return fetch(`users/${user_id}/update`,{\r\n//         headers:{\r\n//             'Content-Type': 'application/json'\r\n//         },\r\n//         method:'put',\r\n//         body:JSON.stringify({user_id:user_id})\r\n//     }).then(res => res.json())\r\n// }\r\n\r\n\r\nexport const reqAddAttendance = (attendance_id,employee_id,employee_name,department_id,\r\n    workingtime,offworktime,numberoflateandleaveearly\r\n    ) =>{\r\n    return fetch(`attendance/addAttendance`,{\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:'post',\r\n        body:JSON.stringify({attendance_id:attendance_id,employee_id:employee_id,employee_name:employee_name,\r\n            department_id:department_id,workingtime:workingtime,offworktime:offworktime,numberoflateandleaveearly:numberoflateandleaveearly\r\n        })\r\n    }).then(res => res.json())\r\n}\r\n\r\n   \r\n","import React, { useState, createContext } from \"react\";\r\nimport {message} from 'antd';\r\nimport { reqLogin} from \"../api/index\";\r\n\r\nexport const AuthContext = createContext(null);\r\n\r\nconst AuthContextProvider = (props) => {\r\n  const existingToken = localStorage.getItem(\"token\");\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [authToken, setAuthToken] = useState(existingToken);\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  //Function to put JWT token in local storage.\r\n  const setToken = (data) => {\r\n    localStorage.setItem(\"token\", data);\r\n    setAuthToken(data);\r\n  }\r\n\r\n  const authenticate = async (username, password) => {\r\n    const result = await reqLogin(username, password);\r\n    if (result.token) {\r\n      setToken(result.token)\r\n      setIsAuthenticated(true);\r\n      setUserName(username);\r\n    }else {\r\n      message.error(\"Wrong username or password!\");\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        authenticate,\r\n        userName,\r\n        authToken\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;","export default __webpack_public_path__ + \"static/media/logo.80da78a9.jpg\";","import React, {useContext, useState} from 'react';\r\nimport {Form,  Input, Button, Checkbox, } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport './login.less';\r\nimport logo  from '../../assets/images/logo.jpg';\r\nimport {AuthContext }from \"../../context/authContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst LoginPage = props => {\r\n    const context = useContext(AuthContext)\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n  \r\n    const login = () => {\r\n      context.authenticate(userName, password);\r\n    };\r\n\r\n    const onFinish = async () => {\r\n     context.authenticate(userName,password)\r\n    };\r\n    // const validatePwd = (value) => {\r\n    //   // //console.log(value)\r\n    //   if (!value) {\r\n    //     message.info(\"Wrong username or password!\");\r\n  \r\n    //   } else {\r\n    //     message.info(\"User login is successful!\"); //验证通过\r\n    //   }\r\n    // };\r\n\r\n    const { from } = props.location.state || { from: { pathname: \"/\" } };\r\n\r\n    if (context.isAuthenticated === true) {\r\n      return <Redirect to={from} />;\r\n    }\r\n   \r\n        return(\r\n            <div className=\"login\">\r\n                <header className=\"login-header\">\r\n                    <img src= {logo} alt=\"logo\"/>\r\n                    <h1>Enterprise Management System</h1>\r\n                </header>\r\n                <section className=\"login-content\">\r\n                  <h2>Login</h2>\r\n\r\n                  <Form \r\n                    name=\"normal_login\"\r\n                    className=\"login-form\" \r\n                    initialValues={{\r\n                      remember: true,\r\n                    }}  \r\n                    onFinish={onFinish}\r\n              \r\n                  \r\n                  >\r\n                    <Form.Item \r\n                      name=\"username\"\r\n                      rules={[\r\n                        {required: true, message: 'Please input your Username!',},\r\n                        { min:2, message: 'User name at least 2 digits!',},\r\n                        { max:12, message: 'User name up to 12 digits!',},\r\n                        { pattern: /^[a-zA-Z0-9_]+$/, message: 'Username must be in English, composed of numbers or underscores!',},\r\n                      ]} \r\n                    >\r\n                      <Input prefix={<UserOutlined className=\"site-form-item-icon\" />}  onChange={e => {setUserName(e.target.value);}} placeholder=\"Username\" />\r\n                    </Form.Item>\r\n                    <Form.Item \r\n                      name=\"password\" \r\n                      rules={[\r\n                        { required: true, message: 'Please input your Password!',},\r\n                        { min:2, message: 'Password at least 2 digits!',},\r\n                        { max:12, message: 'Password up to 12 digits!',},\r\n                        { pattern: /^[a-zA-Z0-9_]+$/, message: 'Password must be in English, composed of numbers or underscores!',},\r\n                        {\r\n                         // validator: validatePwd,\r\n                        },\r\n                     \r\n                      ]} \r\n                    >\r\n                      <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        onChange={e => {setPassword(e.target.value);}}\r\n                      /> \r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                      <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                        <Checkbox>Remember me</Checkbox>\r\n                      </Form.Item>\r\n                  \r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                      <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onCilck={login}>\r\n                        Log in\r\n                      </Button>\r\n          \r\n                    </Form.Item>\r\n                  </Form>\r\n\r\n                    \r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\nexport default LoginPage;\r\n\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './index.less';\r\nimport logo from '../../assets/images/logo.jpg';\r\nimport { Menu } from 'antd';\r\nimport {\r\n  MailOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nexport default class LeftNav extends Component{\r\n    render(){\r\n        return( \r\n            <div className=\"left-nav\">\r\n              <Link to='/' className=\"left-nav-header\">\r\n                  <img src={logo} alt=\"logo\"/>\r\n                  <h1>Enterprise Management System</h1>\r\n              </Link>\r\n\r\n            \r\n              <Menu mode=\"inline\" theme=\"dark\" >\r\n                <Menu.Item key=\"1\" icon={<MailOutlined />}>\r\n                  <Link to='/home'>Home</Link>\r\n                </Menu.Item>\r\n                <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"Employee Management\">\r\n                  <Menu.Item key=\"2\"><Link to ='./employee'>Employee Information</Link></Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"sub2\" icon={<MailOutlined />} title=\"Attendance Management\">\r\n                  <Menu.Item key=\"3\"><Link to='./attendance'>Attendance Information</Link></Menu.Item>\r\n                 \r\n                </SubMenu>\r\n              \r\n                <SubMenu key=\"sub3\" icon={<MailOutlined />} title=\"System Management\">\r\n                  <Menu.Item key=\"4\"><Link to ='/system'>System Information</Link></Menu.Item>\r\n                </SubMenu>\r\n              </Menu>\r\n            </div>\r\n         \r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './index.less';\r\n\r\nexport default class Header extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"header\">\r\n                <div className=\"header-top\">\r\n                    <span>Welcome,admin!</span>\r\n                    <a href= \"/login\">Log Out</a>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <div className=\"header-bottom-left\">Home Page</div>\r\n                    <div className=\"header-bottom-right\">\r\n                        <span>2020-2-3</span>\r\n                        <img src=\" \" alt=\" \" />\r\n                        <span>sunny</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         \r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './home.less';\r\n\r\n\r\nexport default class Home extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"home\">Welcome to the enterprise management system!</div>\r\n         \r\n        )\r\n    }\r\n}","import React, { PureComponent } from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Item = Form.Item;\r\n\r\nexport default class AttendanceForm extends PureComponent {\r\n  static propTypes = {\r\n\r\n    attendance: PropTypes.object,\r\n  };\r\n  state = {};\r\n  onValuesChange = (values) => {\r\n    this.setState(values);\r\n  };\r\n  addAttendance = () => {\r\n    //collect data\r\n    const attendance = this.state;\r\n    //Update list display\r\n    return attendance;\r\n\r\n  };\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 }, //The width of the left label\r\n      wrapperCol: { span: 10 }, //The width of the input box on the right side\r\n    };\r\n    const attendance = this.props.attendance\r\n    return (\r\n      <Form {...formItemLayout} onValuesChange={this.onValuesChange}>\r\n          <Item\r\n            label=\"Attendance_id\"\r\n            name=\"attendance_id\"\r\n            rules={[{ required: true, message: \"The Attendance ID must be entered!!\" }]}\r\n            initialValue={attendance.attendance_id}\r\n          >\r\n            <Input placeholder=\"Please enter your attendance_id\"></Input>\r\n          </Item>\r\n        <Item\r\n          label=\"Employee_id\"\r\n          name=\"employee_id\"\r\n          rules={[{ required: true, message: \"The employee's id must be entered!!\" }]}\r\n          initialValue={attendance.employee_id}\r\n        >\r\n          <Input placeholder=\"Please enter your id\"></Input>\r\n        </Item>\r\n        \r\n          <Item\r\n            label='Employee_name'\r\n            name='employee_name'\r\n            rules={[{ required: true, message: \"The employee name must be entered!!\" }]}\r\n            initialValue={attendance.employee_name}\r\n          >\r\n            <Input placeholder=\"Please enter your name\"></Input>\r\n          </Item>\r\n        \r\n        <Item\r\n          label='Department_id'\r\n          name='department_id'\r\n          rules={[{ required: true, message: \"The employee's department id number must be entered!!\" }]}\r\n          initialValue={attendance.department_id}\r\n        >\r\n          <Input placeholder=\"Please enter your department id\"></Input>\r\n        </Item>\r\n        <Item\r\n          label=\"Working Time\"\r\n          name=\"workingtime\"\r\n          rules={[{ required: true, message: \"The working Time must be entered!!\" }]}\r\n          initialValue={attendance.workingtime}\r\n        >\r\n          <Input placeholder=\"Please enter working Time\"\r\n          ></Input>\r\n        </Item>\r\n        <Item\r\n          label=\"Offworktime\"\r\n          name=\"offworktime\"\r\n          rules={[{ required: true, message: \"The offworktime must be entered!!\" }]}\r\n          initialValue={attendance.offworktime}\r\n        >\r\n          <Input placeholder=\"Please enter the offworktime\"\r\n          ></Input>\r\n        </Item>\r\n        <Item\r\n          label=\"Number of late and leave early\"\r\n          name=\"numberoflateandleaveearly\"\r\n          rules={[{ required: true, message: \"This recording must be entered!!\" }]}\r\n          initialValue={attendance.numberoflateandleaveearly}\r\n        >\r\n          <Input placeholder=\"Please enter the number\"\r\n          ></Input>\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport './index.less'\r\nexport default class LinkButton extends Component {\r\n    render() {\r\n        return (\r\n            <button {...this.props} className='link-button'></button>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Card,Button,Table,Input, Space,Modal,message} from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport {reqGetAttendance,reqAddAttendance,reqDeleteAttendance} from '../../api/index';\r\nimport AttendanceForm from '../attendance/attendance-form';\r\nimport LinkButton from '../../components/link-button/index';\r\n\r\n\r\n\r\nexport default class Attendance extends Component{\r\n    constructor(props) {\r\n      super(props);\r\n      this.att = React.createRef();\r\n      this.state= {\r\n        attendances:[],//List of all recordings\r\n        attendance:{},// one recording\r\n        searchText: '',//Enter text in search box\r\n        searchedColumn: '',//Searched column\r\n        showStatus: 0,//Whether to display the page\r\n    };\r\n    }\r\n\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title:'Attendance_id',\r\n                dataIndex:'attendance_id',\r\n                key:'attendance_id',\r\n                ...this.getColumnSearchProps('attendance_id'),\r\n            },\r\n            {\r\n                title:'Employee_id',\r\n                dataIndex:'employee_id',\r\n                key:'employee_id',\r\n                ...this.getColumnSearchProps('employee_id'),\r\n            },\r\n            {\r\n                title:'Employee_name',\r\n                dataIndex:'employee_name',\r\n                key:'employee_name',\r\n                ...this.getColumnSearchProps('employee_name'),\r\n            },\r\n            {\r\n                title:'Department_id',\r\n                dataIndex:'department_id',\r\n                key:'department_id',\r\n                ...this.getColumnSearchProps('department_id'),\r\n            },\r\n            {\r\n                title:'Working Time',\r\n                dataIndex:'workingtime',\r\n                key:'workingtime',\r\n                ...this.getColumnSearchProps('workingtime'),\r\n            },\r\n            {\r\n                title:'Off Work Time',\r\n                dataIndex:'offworktime',\r\n                key:'offworktime',\r\n                ...this.getColumnSearchProps('offworktime'),\r\n              \r\n            },\r\n            {\r\n                title:'Number of late and leave early',\r\n                dataIndex:'numberoflateandleaveearly',\r\n                key:'numberoflateandleaveearly',\r\n                ...this.getColumnSearchProps('numberoflateandleaveearly'),\r\n              \r\n            },\r\n            {\r\n              title: \"Operation\",\r\n              render: (attendance) => (\r\n                  <LinkButton onClick={() => this.deleteAttendance(attendance)}>Delete</LinkButton>\r\n              ),\r\n            },\r\n            ]}\r\n\r\n    \r\n    \r\n \r\n\r\n    getAttendance = async() =>{\r\n        const result = await reqGetAttendance(); \r\n        if (result){\r\n            const attendances = result\r\n            this.setState({\r\n                attendances\r\n            })\r\n        }\r\n    }   \r\n    addAttendances = async () => {\r\n        //Collect the data\r\n        let attendance = this.att.current.addAttendance();\r\n        if (this.state.attendance.attendance_id) {\r\n          attendance.attendance_id = this.state.attendance.attendance_id;\r\n        }\r\n        //Submit an add request\r\n        const result = await reqAddAttendance(attendance.attendance_id,attendance.employee_id,\r\n          attendance.employee_name,attendance.department_id,attendance.workingtime,\r\n          attendance.offworktime,attendance.numberoflateandleaveearly\r\n          ); \r\n        // Update list display\r\n        if (result) {\r\n            message.success(`The record is added successfully!`);\r\n            this.getAttendance();\r\n            this.setState({ showStatus: 0 });\r\n          } else {\r\n            message.error(`Record modification failed!`);\r\n          }\r\n          // //console.log(user);\r\n        };\r\n        deleteAttendance = (attendance) => {\r\n          Modal.confirm({\r\n            title: `Are you sure to delete ${attendance.employee_name}?`,\r\n            onOk: async () => {\r\n              const result = await reqDeleteAttendance(attendance.attendance_id);\r\n              if (result) {\r\n                 message.success(\"The recording deleted successfully!!\");\r\n                 this.getAttendance();\r\n                 this.setState({ showStatus: 0 });\r\n              } else {\r\n                message.error(\"Failed to delete this recording!!\");\r\n              }\r\n            },\r\n          });\r\n          };\r\n   showUpdate = (attendance) => {\r\n     this.setState({attendance:attendance});\r\n     this.setState({ showStatus: 1 });\r\n   };\r\n    \r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Space>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                icon={<SearchOutlined />}\r\n                size=\"small\"\r\n                style={{ width: 90 }}\r\n              >\r\n                Search\r\n              </Button>\r\n              <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                Reset\r\n              </Button>\r\n            </Space>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n            : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select(), 100);\r\n          }\r\n        },\r\n        render: text =>\r\n          this.state.searchedColumn === dataIndex ? (\r\n            <Highlighter\r\n              highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n              searchWords={[this.state.searchText]}\r\n              autoEscape\r\n              textToHighlight={text ? text.toString() : ''}\r\n            />\r\n          ) : (\r\n            text\r\n          ),\r\n      });\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n          searchText: selectedKeys[0],\r\n          searchedColumn: dataIndex,\r\n        });\r\n      };\r\n    \r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n      };\r\n    \r\n    handleCancel = () => {\r\n        this.setState({ showStatus: 0 });\r\n      };\r\n\r\n      UNSAFE_componentWillMount() {\r\n        this.initColumns();\r\n      }\r\n      componentDidMount(){\r\n        this.getAttendance();\r\n      }\r\n    \r\n  \r\n\r\n\r\n    render(){\r\n        const{attendances,showStatus} = this.state;\r\n        const title = (\r\n          <span>\r\n            <Button type=\"primary\" onClick={() => {this.setState({ showStatus: 1, attendance: {} });}}>Create New Recording</Button> \r\n          </span>\r\n        )\r\n      return(\r\n            <Card title={title}>\r\n                <Table\r\n                 bordered\r\n                 rowKey='attendance_id'\r\n                 dataSource={attendances}\r\n                 columns={this.columns}\r\n                 pagination={{defaultPageSize: 5}}\r\n                />\r\n                              <Modal\r\n           title={\"Add New Recording\"}\r\n          visible={showStatus === 1}\r\n          onOk={this.addAttendances}\r\n          onCancel={this.handleCancel}\r\n          destroyOnClose={true}\r\n        >\r\n          <AttendanceForm ref={this.att} attendance={this.state.attendance} />\r\n        </Modal>\r\n            </Card>\r\n            \r\n        )\r\n    }\r\n}","import React, { PureComponent } from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Item = Form.Item;\r\n\r\nexport default class EmployeeForm extends PureComponent {\r\n  static propTypes = {\r\n\r\n    employee: PropTypes.object,\r\n  };\r\n  state = {};\r\n  onValuesChange = (values) => {\r\n    this.setState(values);\r\n  };\r\n  addOrUpdateEmployee = () => {\r\n    //collect data\r\n    const employee = this.state;\r\n    //Update employees list display\r\n    return employee;\r\n\r\n  };\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 }, //The width of the left label\r\n      wrapperCol: { span: 10 }, //The width of the input box on the right side\r\n    };\r\n    const employee = this.props.employee\r\n    return (\r\n      <Form {...formItemLayout} onValuesChange={this.onValuesChange}>\r\n        <Item\r\n            label=\"Employee_id\"\r\n            name=\"Employee_id\"\r\n            rules={[{ required: true, message: \"The employee ID must be entered!!\" }]}\r\n            initialValue={employee.employee_id}\r\n          >\r\n            <Input placeholder=\"Please enter your Id\"></Input>\r\n        </Item>\r\n        <Item\r\n          label=\"Employee_name\"\r\n          name=\"Employee_name\"\r\n          rules={[{ required: true, message: \"The employee name must be entered!!\" }]}\r\n          initialValue={employee.employee_name}\r\n        >\r\n          <Input placeholder=\"Please enter your name\"></Input>\r\n        </Item>\r\n      \r\n\r\n        \r\n        <Item\r\n          label=\"Employee_gender\"\r\n          name=\"Employee_gender\"\r\n          rules={[{ required: true, message: \"The employee's gender must be entered!!\" }]}\r\n          initialValue={employee.employee_gender}\r\n        >\r\n          <Input placeholder=\"Please enter your gender\"></Input>\r\n        </Item>\r\n        <Item\r\n          label=\"Employee_phone\"\r\n          name=\"Employee_phone\"\r\n          rules={[{ required: true, message: \"The employee's phone number must be entered!!\" }]}\r\n          initialValue={employee.employee_phone}\r\n        >\r\n          <Input placeholder=\"Please enter your phone number\"></Input>\r\n        </Item>\r\n        <Item\r\n          label=\"Employee_address\"\r\n          name=\"Employee_address\"\r\n          rules={[{ required: true, message: \"The employee's address must be entered!!\" }]}\r\n          initialValue={employee.employee_address}\r\n        >\r\n          <Input placeholder=\"Please enter your address\"\r\n          ></Input>\r\n        </Item>\r\n    \r\n    \r\n      </Form>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {Card,Button,Table,Input, Space,Modal,message} from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport {reqGetEmployees,reqAddOrUpdateEmployee,reqDeleteEmployee} from '../../api/index';\r\nimport EmployeeForm from '../employee/employee-form';\r\nimport LinkButton from '../../components/link-button/index';\r\n\r\n\r\nexport default class Employee extends Component{\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.em = React.createRef();\r\n      this.state = {\r\n        employees:[],//List of all employees\r\n        employee:{},//Selected employees\r\n        searchText: '',//Enter text in search box\r\n        searchedColumn: '',//Searched column\r\n        showStatus: 0,//Whether to display the page\r\n    };\r\n    }\r\n\r\n    initColumns = () => {\r\n      this.columns = [\r\n      {\r\n          title:'Employee_id',\r\n          dataIndex:'employee_id',\r\n          key:'employee_id',\r\n          ...this.getColumnSearchProps('employee_id'),\r\n      },\r\n      {\r\n          title:'Employee_name',\r\n          dataIndex:'employee_name',\r\n          key:'employee_name',\r\n          ...this.getColumnSearchProps('employee_name'),\r\n      },\r\n      {\r\n          title:'Employee_gender',\r\n          dataIndex:'employee_gender',\r\n          key:'employee_gender',\r\n          ...this.getColumnSearchProps('employee_gender'),\r\n      },\r\n      {\r\n          title:'Employee_qualification',\r\n          dataIndex:'employee_qualification',\r\n          key:'employee_qualification',\r\n          ...this.getColumnSearchProps('employee_qualification'),\r\n      },\r\n      {\r\n          title:'Employee_phone',\r\n          dataIndex:'employee_phone',\r\n          key:'employee_phone',\r\n          ...this.getColumnSearchProps('employee_phone'),\r\n      },\r\n      {\r\n          title:'Employee_address',\r\n          dataIndex:'employee_address',\r\n          key:'employee_adress',\r\n          ...this.getColumnSearchProps('employee_address'),\r\n        \r\n      },\r\n      {\r\n        title: \"Operation\",\r\n        render: (employee) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(employee)}>Edit</LinkButton>\r\n            <LinkButton onClick={() => this.deleteEmployee(employee)}>Delete</LinkButton>\r\n          </span>\r\n        ),\r\n      },\r\n      ]}\r\n\r\n    getEmployees = async() =>{\r\n        const result = await reqGetEmployees(); \r\n        if (result){\r\n            const employees = result\r\n            this.setState({\r\n                employees\r\n            })\r\n        }\r\n    } \r\n    \r\n\r\n    // delete employee\r\n    deleteEmployee = (employee) => {\r\n    Modal.confirm({\r\n      title: `Are you sure to delete ${employee.employee_name}?`,\r\n      onOk: async () => {\r\n        \r\n        const result = await reqDeleteEmployee(employee.employee_id);\r\n        if (result) {\r\n           message.success(\"Employee deleted successfully!!\");\r\n           this.getEmployees();\r\n           this.setState({ showStatus: 0 });\r\n        } else {\r\n          message.error(\"Failed to delete employee!!\");\r\n        }\r\n      },\r\n    });\r\n    };\r\n    //update employee information\r\n  addOrUpdateEmployees = async () => {\r\n    let employee = this.em.current.addOrUpdateEmployee();\r\n \r\n    if (this.state.employee.employee_id) {\r\n      employee.employee_id = this.state.employee.employee_id;\r\n    }\r\n   \r\n    const result = await reqAddOrUpdateEmployee(employee.employee_id,employee.employee_name,employee.employee_gender,\r\n      employee.employee_phone,employee.employee_address);\r\n    \r\n    if (result) {\r\n      message.success(\"Update Completed!\");\r\n      this.getEmployees();\r\n      this.setState({ showStatus: 0 });\r\n    } else {\r\n      message.error(\"Update Failed!\");\r\n    }\r\n    // //console.log();\r\n   };\r\n   showUpdate = (employee) => {\r\n     this.setState({employee:employee});\r\n     this.setState({ showStatus: 1 });\r\n   };\r\n    \r\n \r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Space>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                icon={<SearchOutlined />}\r\n                size=\"small\"\r\n                style={{ width: 90 }}\r\n              >\r\n                Search\r\n              </Button>\r\n              <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                Reset\r\n              </Button>\r\n            </Space>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n            : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select(), 100);\r\n          }\r\n        },\r\n        render: text =>\r\n          this.state.searchedColumn === dataIndex ? (\r\n            <Highlighter\r\n              highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n              searchWords={[this.state.searchText]}\r\n              autoEscape\r\n              textToHighlight={text ? text.toString() : ''}\r\n            />\r\n          ) : (\r\n            text\r\n          ),\r\n      });\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n          searchText: selectedKeys[0],\r\n          searchedColumn: dataIndex,\r\n        });\r\n      };\r\n    \r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n      };\r\n    \r\n    handleCancel = () => {\r\n        this.setState({ showStatus: 0 });\r\n      };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.initColumns();\r\n      }\r\n    \r\n    componentDidMount(){\r\n        this.getEmployees();\r\n      }\r\n\r\n\r\n\r\n    render(){\r\n        const{employees,showStatus} = this.state;\r\n        const title = (\r\n          <span>\r\n            <Button type=\"primary\" onClick={() => {this.setState({ showStatus: 1, employee: {} });}}>Create Employee</Button>\r\n          </span>\r\n        )\r\n\r\n      return(\r\n            <Card title={title}>\r\n                <Table\r\n                 bordered\r\n                 rowKey='employee_id'\r\n                 dataSource={employees}\r\n                 columns={this.columns}\r\n                 pagination={{defaultPageSize: 5}}\r\n               \r\n               \r\n                />\r\n        <Modal\r\n          title={this.state.employee.employee_id ? \"Edit Employee's Information\" : \"Create new Employee\"}\r\n          visible={showStatus === 1}\r\n          onOk={this.addOrUpdateEmployees}\r\n          onCancel={this.handleCancel}\r\n          destroyOnClose={true}\r\n        >\r\n          <EmployeeForm ref={this.em} employee={this.state.employee} />\r\n        </Modal>\r\n            </Card>\r\n            \r\n        )\r\n    }\r\n}","import React, { PureComponent } from \"react\";\r\nimport { Form, Input } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Item = Form.Item;\r\n\r\nexport default class UserForm extends PureComponent {\r\n  static propTypes = {\r\n    user: PropTypes.object,\r\n  };\r\n  state = {};\r\n  onValuesChange = (values) => {\r\n    this.setState(values);\r\n  };\r\n  addOrUpdateUser = () => {\r\n    //collect data\r\n    const user = this.state;\r\n    // console.log(user);\r\n    // update user\r\n    return user;\r\n  \r\n  };\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 }, \r\n      wrapperCol: { span: 10 }, \r\n    };\r\n    const user = this.props.user\r\n    // console.log()\r\n    return (\r\n      <Form {...formItemLayout} onValuesChange={this.onValuesChange}>\r\n        <Item\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          rules={[{ required: true, message: \"The username must be enter!\" }]}\r\n          initialValue={user.username}\r\n        >\r\n          <Input placeholder=\"Please enter the username\"></Input>\r\n        </Item>\r\n        <Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"The password must be enter!\" }]}\r\n            initialValue={user.password}\r\n          >\r\n            <Input type=\"password\" placeholder=\"Please enter your password\"></Input>\r\n          </Item>\r\n        \r\n        <Item\r\n          label=\"Employee_id\"\r\n          name=\"employee_id\"\r\n          rules={[{ required: true, message: \"The employee_id must be enter!\" }]}\r\n          initialValue={user.employee_id}\r\n        >\r\n          <Input placeholder=\"Please enter your employee_id\"></Input>\r\n        </Item>\r\n    \r\n      </Form>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport { Table, Input, Button, Modal,Space,Card,message} from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport {reqGetUsers,reqAddOrUpdateUser,reqDeleteUser} from '../../api/index';\r\nimport LinkButton from '../../components/link-button/index';\r\nimport UserForm from '../system/user-form';\r\n\r\nexport default class System extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.us = React.createRef();\r\n    this.state = {\r\n      users:[],\r\n      user:{},\r\n      searchText: '',\r\n      searchedColumn: '',\r\n      showStatus: 0,\r\n      \r\n    };\r\n  }\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: 'UserId',\r\n        dataIndex: 'user_id',\r\n        key: 'user_id',\r\n        width: '15%',\r\n        ...this.getColumnSearchProps('user_id'),\r\n        \r\n      },\r\n      {\r\n        title: 'Username',\r\n        dataIndex: 'username',\r\n        key: 'username',\r\n        width: '20%',\r\n        ...this.getColumnSearchProps('username'),\r\n        \r\n      },\r\n      {\r\n        title: 'Password',\r\n        dataIndex: 'password',\r\n        key: 'password',\r\n        width: '20%',\r\n        ...this.getColumnSearchProps('password'),\r\n        \r\n      },\r\n      {\r\n        title: 'EmployeeId',\r\n        dataIndex: 'employee_id',\r\n        key: 'employee_id',\r\n        width: '15%',\r\n        ...this.getColumnSearchProps('employee_id'),\r\n      \r\n      },\r\n      {\r\n        title: \"Operation\",\r\n        render: (user) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(user)}>Edit</LinkButton>&nbsp;&nbsp;\r\n            <LinkButton onClick={() => this.deleteUser(user)}>Delete</LinkButton>\r\n          </span>\r\n        ),\r\n      },\r\n     \r\n    ];\r\n  }\r\n\r\n  onRow= (user) => {\r\n    return {\r\n      onClick: (event) => {\r\n        this.setState({ user });\r\n      }, \r\n    };\r\n  }\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n  getUsers = async() =>{\r\n    const result = await reqGetUsers(); \r\n    console.log(result);\r\n    if (result){\r\n        const users = result\r\n        this.setState({\r\n            users\r\n        })\r\n    }\r\n}   \r\n// delete user\r\n  deleteUser = (user) => {\r\n    Modal.confirm({\r\n      title: `Are you sure to delete ${user.username}?`,\r\n      onOk: async () => {\r\n        const result = await reqDeleteUser(user.user_id);\r\n        if (result) {\r\n          message.success(\"User deleted successfully!!\");\r\n          this.getUsers();\r\n          this.setState({ showStatus: 0 });\r\n        } else {\r\n          message.error(\"Failed to delete user!!\");\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  addOrUpdateUsers = async () => {\r\n    //collect user\r\n    let user = this.us.current.addOrUpdateUser();\r\n    user.createtime = Date.now();\r\n    if (this.state.user.user_id) {\r\n      user.user_id = this.state.user.user_id;\r\n    }\r\n    //submit a request\r\n    const result = await reqAddOrUpdateUser(user.user_id);\r\n    //update data\r\n    if (result) {\r\n      message.success(\"The information has been modified successfully!\");\r\n      this.getUsers();\r\n      this.setState({ showStatus: 0 });\r\n    } else {\r\n      message.error(\"The information modification failed!\");\r\n    }\r\n    // //console.log(user);\r\n  };\r\n  showUpdate = (user) => {\r\n    this.setState({user:user});\r\n    this.setState({ showStatus: 1 });\r\n  };\r\n\r\nUNSAFE_componentWillMount(){\r\n    this.initColumns();\r\n}\r\n\r\ncomponentDidMount(){\r\n  this.getUsers();\r\n\r\n} \r\n\r\n\r\n\r\n\r\nhandleCancel = () => {\r\n  this.setState({ showStatus: 0 });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n  render(){\r\n    const{users,user,showStatus} = this.state;\r\n    const title = (\r\n      <span>\r\n      <Button type=\"primary\" onClick={() => {this.setState({ showStatus: 1, user: {} });}}>Create User</Button> &nbsp;&nbsp;\r\n      <Button type=\"primary\" disabled={!user.user_id}>Set User Permissions</Button>\r\n      </span>\r\n    );\r\n  \r\n \r\n    return (\r\n           <Card title={title}>\r\n           <Table \r\n           rowKey=\"user_id\"\r\n           pagination={{pageSize: 5,}}\r\n           columns={this.columns} \r\n           dataSource={users} \r\n           rowSelection={{ type: \"radio\", selectedRowKeys: [user.user_id],onSelect:(user)=>{this.setState({user:user})} }} //Set radio\r\n         \r\n           bordered\r\n           />\r\n                   <Modal\r\n          title={this.state.user.user_id ? \"Edit User\" : \"Create User\"}\r\n          visible={showStatus === 1}\r\n          onOk={this.updateUsers}\r\n          onCancel={this.handleCancel}\r\n          destroyOnClose={true}\r\n        >\r\n          <UserForm  ref={this.us} user={this.state.user} />\r\n        </Modal>\r\n           </Card>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {Redirect,Route,Switch} from 'react-router-dom';\r\nimport { Layout } from 'antd';\r\nimport LeftNav from '../../components/left-nav';\r\nimport Header from '../../components/header'; \r\nimport Home from '../home/home';\r\nimport Attendance from '../attendance/attendance';\r\nimport Employee from '../employee/employee';\r\nimport System from '../system/system';\r\n\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\n\r\n\r\n\r\n\r\nexport default class Admin extends Component{\r\n    render(){\r\n        return(\r\n            <Layout style={{height:'100%'}}>\r\n            <Sider>\r\n                <LeftNav/>\r\n            </Sider>\r\n            <Layout>\r\n              <Header>Header</Header>\r\n              <Content style={{margin:20, backgroundColor:'#fff'}}>\r\n             \r\n              <Switch>\r\n                  <Route path='/home' component={Home} />\r\n                  <Route path='/attendance' component={Attendance} />\r\n                  <Route path='/employee' component={Employee} />\r\n                  <Route path='/system' component={System} />\r\n\r\n                  <Redirect to ='/home' />\r\n\r\n              </Switch>\r\n            \r\n        \r\n              \r\n              </Content>\r\n              <Footer>Enterprise employee management system based on React+Antd</Footer>\r\n            </Layout>\r\n          </Layout>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport AuthContextProvider from \"./context/authContext\";\r\nimport Login from './pages/login/login';\r\nimport Admin from './pages/admin/admin';\r\n\r\n\r\nconst App = () => {\r\n \r\n        return (\r\n            <BrowserRouter>\r\n            <AuthContextProvider>\r\n              <Switch> {/**Match only one of the routes */}\r\n                <Route path='/login' component={Login}></Route>\r\n                <Route path='/' component={Admin}></Route>\r\n                \r\n              </Switch>\r\n              </AuthContextProvider>\r\n            </BrowserRouter>\r\n        )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}